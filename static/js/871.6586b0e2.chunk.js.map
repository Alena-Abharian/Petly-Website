{"version":3,"file":"static/js/871.6586b0e2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","_React__default$Compo","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","_objectSpread","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","_ref2$enableHardwareA","enableHardwareAcceleration","_ref2$allowTransformN","allowTransformNone","transformString","sort","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","_len","transformers","_key","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","_ref2$amount","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","_ref3$fallback","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","_ref$viewport","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","_this","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","subscription","on","_this2","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","Infinity","sampleAnimation","pregeneratedKeyframes","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","HTMLElement","acceleratedAnimation","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","_usePresence","_usePresence2","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_a2","args","DOMVisualElement","_VisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","_this$props2","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}